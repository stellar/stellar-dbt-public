name: "stellar_dbt_public" # the name of a dbt project
version: "1.0.0" # version of your project
config-version: 2

profile: "stellar_dbt_public" # the profile dbt uses to connect to your data platform

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"] # directories where models and sources are located
analysis-paths: ["analyses"] # directories where analyses are located
test-paths: ["tests"] # directories where singular or generic test files are located
seed-paths: ["seeds"] # directories where seed files are located
macro-paths: ["macros"] # directories where macros are located
snapshot-paths: ["snapshots"] # directories where snapshots are located

target-path: "target" # directory which will store the compiled SQL files
clean-targets: # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"

vars:
  dbt_project_evaluator:
    documentation_coverage_target: 50
    test_coverage_target: 50
    exclude_packages: ["elementary"]

# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models
models:
  stellar_dbt_public:
    staging:
      +materialized: view # how the staging models will be materialized
    intermediate:
      +materialized: view # how the intermediate models will be materialized
    marts:
      +materialized: table # how the mart models will be materialized

  elementary:
    +schema: elementary
    +docs:
      show: false

  dbt_project_evaluator:
    +dataset: dbt_project_evaluator
    +enabled: "{{ target.name != 'prod' }}"
    marts:
      dag:
        fct_model_fanout:
          +enabled: false
      structure:
        fct_source_directories:
          +enabled: false
        fct_model_naming_conventions:
          +enabled: false
        fct_model_directories:
          +enabled: false
      tests:
        fct_missing_primary_key_tests:
          +enabled: false

seeds:
  stellar_dbt_public:
    dbt_project_evaluator_config:
      +dataset: dbt_project_evaluator
  dbt_project_evaluator:
    dbt_project_evaluator_exceptions:
      +enabled: false

tests:
  dbt_project_evaluator:
    +severity: "{{ env_var('DBT_PROJECT_EVALUATOR_SEVERITY', 'error') }}"
